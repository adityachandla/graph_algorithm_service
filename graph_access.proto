syntax= "proto3";

package graph_access_service;

option go_package = "github.com/adityachandla/graph_access_service/generated";

message AccessRequest {
    uint32 nodeId=1; // Source node id
    uint32 label=2;  // Edge label
    Direction direction=3;// Is the edge outgoing or incoming
    int32 queryId=4;
    enum Direction {
        INCOMING=0;
        OUTGOING=1;
        BOTH=2;
    }
}


message AccessResponse {
    repeated uint32 neighbours=1; // List of Node ids for the neighbours
    ResponseStatus status=2;
    enum ResponseStatus {
        NO_ERROR = 0;
        UNSUPPORTED = 1;
        SERVER_ERROR = 2;
    }
}

message Stats {
    string stats = 1;
}

message StatsRequest{}

message StartQueryRequest{
    Algo algorithm= 2;
    enum Algo {
        BFS = 0;
        DFS = 1;
    }
}
message StartQueryResponse {
    int32 queryId = 1;
}

message EndQueryResponse{}

message EndQueryRequest {
    int32 queryId = 1;
}

service GraphAccess {
    rpc StartQuery(StartQueryRequest) returns (StartQueryResponse){};
    rpc GetNeighbours(AccessRequest) returns (AccessResponse) {};
    rpc EndQuery(EndQueryRequest) returns (EndQueryResponse) {};
    rpc GetStats(StatsRequest) returns (Stats) {};
}
